@model Users
@{
  Layout = "~/Views/User/_Layout.cshtml";
}

<div class="mx-auto w-100 p-3 text-center">
  <h3>Hesap</h3>
  <p>Hesap ayarlarınızı düzenleme ve şifre değiştirme işlemlerinizi buradan yapabilirsiniz.</p>
  <div class="mx-auto my-4 w-50" id="changePassword">
    <fieldset disabled class="mb-3">
      <div class="form-group">
        <label asp-for="Email">Email</label>
        <input type="text" class="form-control" asp-for="Email" placeholder="Email">
      </div>
    </fieldset>

    <div class="form-group">
      <input type="password" class="form-control" v-model="password.Password" name="Password"
        placeholder="Mevcut Şifrenizi giriniz">
    </div>
    <div class="form-group">
      <input type="password" class="form-control" v-model="password.newPassword" name="newPassword"
        placeholder="Yeni Şifrenizi giriniz">
    </div>
    <div class="form-group">
      <input type="password" class="form-control" v-model="password.confirmNewPassword" name="confirmNewPassword"
        placeholder="Yeni Şifre tekrar giriniz">
    </div>
    <div class="form-group">
      <div class="alert alert-warning" id="result">

      </div>
    </div>
    <div class="form-group">
      <button v-on:click="editPassword()" class="btn btn btn-danger">
        Şifreyi Değiştir
      </button>
    </div>
  </div>
</div>

<script>
  // Example starter JavaScript for disabling form submissions if there are invalid fields
  (function () {
    'use strict'

    // Fetch all the forms we want to apply custom Bootstrap validation styles to
    var forms = document.querySelectorAll('.needs-validation')

    // Loop over them and prevent submission
    Array.prototype.slice.call(forms)
      .forEach(function (form) {
        form.addEventListener('submit', function (event) {
          if (!form.checkValidity()) {
            event.preventDefault()
            event.stopPropagation()
          }

          form.classList.add('was-validated')
        }, false)
      })
  })()
</script>

<script src="~/node/vue/dist/vue.min.js" asp-append-version="true" type="text/javascript"></script>
<script src="~/node/axios/dist/axios.min.js" asp-append-version="true" type="text/javascript"></script>

<script>
  new Vue({
    el: '#changePassword',
    data: {
      password: {}
    },
    mounted: function () {
      this.editPassword()
    },
    methods: {
      editPassword: function () {
        var vm = this;
        axios.post("/User/editUser", vm.password)
          .then(function (response) {
            document.getElementById('result').innerHTML = response.data.message;

            if (response.data.result) { // result true olduğunda
              document.getElementById('result').innerHTML = response.data.message;
              window.location.href = response.data.url;
            } else { // result false olduğunda
              document.getElementById('result').innerHTML = response.data.message;
            }

          })
          .catch(function (error) {
            document.getElementById('result').innerHTML = error.data.message;
          })
      }
    }
  });
</script>